package org.bcos.credit.web3j;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;
import org.fisco.bcos.web3j.abi.EventEncoder;
import org.fisco.bcos.web3j.abi.FunctionEncoder;
import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.Address;
import org.fisco.bcos.web3j.abi.datatypes.Bool;
import org.fisco.bcos.web3j.abi.datatypes.DynamicArray;
import org.fisco.bcos.web3j.abi.datatypes.Event;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32;
import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint8;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.crypto.EncryptType;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.Log;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple1;
import org.fisco.bcos.web3j.tuples.generated.Tuple7;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;
import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class CreditSignersData extends Contract {
    public static final String[] BINARY_ARRAY = {"608060405234801561001057600080fd5b506040516127e73803806127e78339810180604052810190808051820192919050505060008090505b81518110156100ca576000828281518110151561005257fe5b9060200190602002015190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050806001019050610039565b505061270c806100db6000396000f30060806040526004361062000073576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633ffefe4e146200007857806363a9c3d714620000e857806394cf795e1462000146578063c48dad6614620001b7578063fa69efbd14620002e8575b600080fd5b3480156200008557600080fd5b50620000a66004803603810190808035906020019092919050505062000316565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620000f557600080fd5b506200012c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000378565b604051808215151515815260200191505060405180910390f35b3480156200015357600080fd5b506200015e6200041e565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620001a357808201518184015260208101905062000186565b505050509050019250505060405180910390f35b348015620001c457600080fd5b50620002a6600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080351515906020019092919080359060200190929190803560ff16906020019092919080356000191690602001909291908035600019169060200190929190505050620004ae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620002f557600080fd5b5062000300620006da565b6040518082815260200191505060405180910390f35b6000806000805490509050808310156200036d576000838154811015156200033a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915062000372565b600091505b50919050565b600080600090505b60008054905081101562000413576000818154811015156200039e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000407576001915062000418565b80600101905062000380565b600091505b50919050565b60606000805480602002602001604051908101604052809291908181526020018280548015620004a457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000459575b5050505050905090565b600080888888888888883033620004c4620006e6565b8080602001806020018a1515151581526020018981526020018860ff1660ff168152602001876000191660001916815260200186600019166000191681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183810383528c818151815260200191508051906020019080838360005b83811015620005a357808201518184015260208101905062000586565b50505050905090810190601f168015620005d15780820380516001836020036101000a031916815260200191505b5083810382528b818151815260200191508051906020019080838360005b838110156200060c578082015181840152602081019050620005ef565b50505050905090810190601f1680156200063a5780820380516001836020036101000a031916815260200191505b509b505050505050505050505050604051809103906000f08015801562000665573d6000803e3d6000fd5b5090507f71e80574278e490cdab5a857f6c4c10750667ccdb5379b151bead879960cd4c681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a180915050979650505050505050565b60008080549050905090565b604051611fe980620006f883390190560060806040523480156200001157600080fd5b5060405162001fe938038062001fe983398101806040528101908080518201929190602001805182019291906020018051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000e4816200056f640100000000026401000000009004565b15620003da5788600090805190602001906200010292919062000673565b5087600190805190602001906200011b92919062000673565b5086600260006101000a81548160ff02191690831515021790555085600381905550600485908060018154018082558091505090600182039060005260206000209060209182820401919006909192909190916101000a81548160ff021916908360ff160217905550506005849080600181540180825580915050906001820390600052602060002001600090919290919091509060001916905550600683908060018154018082558091505090600182039060005260206000200160009091929091909150906000191690555060078190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f358d13277ad431d2ea77b0cc56e9b719123bc7410d3e8ee5f309c4faa7907e428989898989898989604051808060200180602001891515151581526020018881526020018760ff1660ff168152602001866000191660001916815260200185600019166000191681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183810383528b818151815260200191508051906020019080838360005b83811015620003285780820151818401526020810190506200030b565b50505050905090810190601f168015620003565780820380516001836020036101000a031916815260200191505b5083810382528a818151815260200191508051906020019080838360005b838110156200039157808201518184015260208101905062000374565b50505050905090810190601f168015620003bf5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a162000560565b7f32d12ecec8becd7f1e13df3a96b2d472afc96939ecd25ee8f7a75098b4745aab8989898989898989604051808060200180602001891515151581526020018881526020018760ff1660ff168152602001866000191660001916815260200185600019166000191681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183810383528b818151815260200191508051906020019080838360005b83811015620004b357808201518184015260208101905062000496565b50505050905090810190601f168015620004e15780820380516001836020036101000a031916815260200191505b5083810382528a818151815260200191508051906020019080838360005b838110156200051c578082015181840152602081019050620004ff565b50505050905090810190601f1680156200054a5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a15b50505050505050505062000722565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166363a9c3d7836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200062f57600080fd5b505af115801562000644573d6000803e3d6000fd5b505050506040513d60208110156200065b57600080fd5b81019080805190602001909291905050509050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006b657805160ff1916838001178555620006e7565b82800160010185558215620006e7579182015b82811115620006e6578251825591602001919060010190620006c9565b5b509050620006f69190620006fa565b5090565b6200071f91905b808211156200071b57600081600090555060010162000701565b5090565b90565b6118b780620007326000396000f300608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063209652551461009e5780633b52ebd0146100c957806343cfbd651461012057806346998f40146101b057806348f85bce1461024057806359296e7b146102a457806394cf795e146104d2578063c8f5acb61461053e578063dc58ab111461056d575b600080fd5b3480156100aa57600080fd5b506100b36105c8565b6040518082815260200191505060405180910390f35b3480156100d557600080fd5b506100de6105d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673","","3b15801561110757600080fd5b505af115801561111b573d6000803e3d6000fd5b505050506040513d602081101561113157600080fd5b81019080805190602001909291905050509250826040519080825280602002602001820160405280156111735781602001602082028038833980820191505090505b509150600090505b828110156112a657600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ffefe4e826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561121457600080fd5b505af1158015611228573d6000803e3d6000fd5b505050506040513d602081101561123e57600080fd5b8101908080519060200190929190505050828281518110151561125d57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808060010191505061117b565b60006001600260009054906101000a900460ff1660035460046005600688878054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113595780601f1061132e57610100808354040283529160200191611359565b820191906000526020600020905b81548152906001019060200180831161133c57829003601f168201915b50505050509750868054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113f55780601f106113ca576101008083540402835291602001916113f5565b820191906000526020600020905b8154815290600101906020018083116113d857829003601f168201915b505050505096508380548060200260200160405190810160405280929190818152602001828054801561146d57602002820191906000526020600020906000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116114365790505b50505050509350828054806020026020016040519081016040528092919081815260200182805480156114c357602002820191906000526020600020905b815460001916815260200190600101908083116114ab575b505050505092508180548060200260200160405190810160405280929190818152602001828054801561151957602002820191906000526020600020905b81546000191681526020019060010190808311611501575b505050505091509a509a509a509a509a509a509a509a505050509091929394959697565b6060600060606000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa69efbd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156115cb57600080fd5b505af11580156115df573d6000803e3d6000fd5b505050506040513d60208110156115f557600080fd5b81019080805190602001909291905050509250826040519080825280602002602001820160405280156116375781602001602082028038833980820191505090505b509150600090505b8281101561176a57600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ffefe4e826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156116d857600080fd5b505af11580156116ec573d6000803e3d6000fd5b505050506040513d602081101561170257600080fd5b8101908080519060200190929190505050828281518110151561172157fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808060010191505061163f565b81935050505090565b6000600260009054906101000a900460ff16905090565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166363a9c3d7836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561184957600080fd5b505af115801561185d573d6000803e3d6000fd5b505050506040513d602081101561187357600080fd5b810190808051906020019092919050505090509190505600a165627a7a723058201ae20ce8db9a624b0578cd3021b15934024eb3240a6fa64fd56c580054f072a30029a165627a7a72305820017efd6d681dd41db4819ffeb1a59184bec655168c63ecce89a1a2a260b080930029"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getSigner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSigners\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"grd\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"p\",\"type\":\"bool\"},{\"name\":\"vl\",\"type\":\"int256\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"newCredit\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSignersSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"creditSigners\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"newCreditEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);

    public static final String[] SM_BINARY_ARRAY = {"","","011615610100020316600290048152602001915080546001816001161561010002031660029004801561116e5780601f106111435761010080835404028352916020019161116e565b820191906000526020600020905b81548152906001019060200180831161115157829003601f168201915b50508381038252898181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156111f15780601f106111c6576101008083540402835291602001916111f1565b820191906000526020600020905b8154815290600101906020018083116111d457829003601f168201915b5050995050505050505050505060405180910390a160019150611883565b7f4045fab853fee6a9f979558bd0c6dfeaa8d99f25031547b10f5f0900bf8d8e9760006001600260009054906101000a900460ff1660035489898933604051808060200180602001891515151581526020018881526020018760ff1660ff168152602001866000191660001916815260200185600019166000191681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183810383528b8181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156113425780601f1061131757610100808354040283529160200191611342565b820191906000526020600020905b81548152906001019060200180831161132557829003601f168201915b505083810382528a8181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156113c55780601f1061139a576101008083540402835291602001916113c5565b820191906000526020600020905b8154815290600101906020018083116113a857829003601f168201915b50509a505050505050505050505060405180910390a160009150611883565b8080600101915050610f60565b6113fa3361097f565b156116b257600485908060018154018082558091505090600182039060005260206000209060209182820401919006909192909190916101000a81548160ff021916908360ff160217905550506005849080600181540180825580915050906001820390600052602060002001600090919290919091509060001916905550600683908060018154018082558091505090600182039060005260206000200160009091929091909150906000191690555060073390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507ffd5561a0aa49d62a65b99dcede31328c08bc33de98888c64d5b345999abe920a60006001600260009054906101000a900460ff16600354898989604051808060200180602001881515151581526020018781526020018660ff1660ff1681526020018560001916600019168152602001846000191660001916815260200183810383528a8181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156116115780601f106115e657610100808354040283529160200191611611565b820191906000526020600020905b8154815290600101906020018083116115f457829003601f168201915b50508381038252898181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156116945780601f1061166957610100808354040283529160200191611694565b820191906000526020600020905b81548152906001019060200180831161167757829003601f168201915b5050995050505050505050505060405180910390a160019150611883565b7f49410855c5096c6e7f366715cfb60e1b3f23c1a248ab4aa7fd1ed546140e348b60006001600260009054906101000a900460ff1660035489898933604051808060200180602001891515151581526020018881526020018760ff1660ff168152602001866000191660001916815260200185600019166000191681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183810383528b8181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156117e55780601f106117ba576101008083540402835291602001916117e5565b820191906000526020600020905b8154815290600101906020018083116117c857829003601f168201915b505083810382528a8181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156118685780601f1061183d57610100808354040283529160200191611868565b820191906000526020600020905b81548152906001019060200180831161184b57829003601f168201915b50509a505050505050505050505060405180910390a1600091505b5093925050505600a165627a7a723058202a0d8f1f234da4dc674b3019438423c7ef2ad01379344307b3d4601135419bd80029a165627a7a7230582070e9e3aaa1137b680999f90071a116c792dbd2997ab9c58f35432fcab4080d3e0029"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String FUNC_GETSIGNER = "getSigner";

    public static final String FUNC_VERIFY = "verify";

    public static final String FUNC_GETSIGNERS = "getSigners";

    public static final String FUNC_NEWCREDIT = "newCredit";

    public static final String FUNC_GETSIGNERSSIZE = "getSignersSize";

    public static final Event NEWCREDITEVENT_EVENT = new Event("newCreditEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    @Deprecated
    protected CreditSignersData(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CreditSignersData(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CreditSignersData(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CreditSignersData(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static String getBinary() {
        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public static TransactionDecoder getTransactionDecoder() {
        return transactionDecoder;
    }

    public RemoteCall<String> getSigner(BigInteger index) {
        final Function function = new Function(FUNC_GETSIGNER, 
                Arrays.<Type>asList(new Uint256(index)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Boolean> verify(String addr) {
        final Function function = new Function(FUNC_VERIFY, 
                Arrays.<Type>asList(new Address(addr)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<List> getSigners() {
        final Function function = new Function(FUNC_GETSIGNERS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> newCredit(String grd, String name, Boolean p, BigInteger vl, BigInteger v, byte[] r, byte[] s) {
        final Function function = new Function(
                FUNC_NEWCREDIT, 
                Arrays.<Type>asList(new Utf8String(grd),
                new Utf8String(name),
                new Bool(p),
                new Int256(vl),
                new Uint8(v),
                new Bytes32(r),
                new Bytes32(s)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void newCredit(String grd, String name, Boolean p, BigInteger vl, BigInteger v, byte[] r, byte[] s, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_NEWCREDIT, 
                Arrays.<Type>asList(new Utf8String(grd),
                new Utf8String(name),
                new Bool(p),
                new Int256(vl),
                new Uint8(v),
                new Bytes32(r),
                new Bytes32(s)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String newCreditSeq(String grd, String name, Boolean p, BigInteger vl, BigInteger v, byte[] r, byte[] s) {
        final Function function = new Function(
                FUNC_NEWCREDIT, 
                Arrays.<Type>asList(new Utf8String(grd),
                new Utf8String(name),
                new Bool(p),
                new Int256(vl),
                new Uint8(v),
                new Bytes32(r),
                new Bytes32(s)),
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public Tuple7<String, String, Boolean, BigInteger, BigInteger, byte[], byte[]> getNewCreditInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_NEWCREDIT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}, new TypeReference<Int256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Bytes32>() {}, new TypeReference<Bytes32>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple7<String, String, Boolean, BigInteger, BigInteger, byte[], byte[]>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (Boolean) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (BigInteger) results.get(4).getValue(), 
                (byte[]) results.get(5).getValue(), 
                (byte[]) results.get(6).getValue()
                );
    }

    public Tuple1<String> getNewCreditOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_NEWCREDIT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public RemoteCall<BigInteger> getSignersSize() {
        final Function function = new Function(FUNC_GETSIGNERSSIZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public List<NewCreditEventEventResponse> getNewCreditEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(NEWCREDITEVENT_EVENT, transactionReceipt);
        ArrayList<NewCreditEventEventResponse> responses = new ArrayList<NewCreditEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            NewCreditEventEventResponse typedResponse = new NewCreditEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.addr = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void registernewCreditEventEventLogFilter(String fromBlock, String toBlock, List<String> otherTopics, EventLogPushWithDecodeCallback callback) {
        String topic0 = EventEncoder.encode(NEWCREDITEVENT_EVENT);
        registerEventLogPushFilter(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void registernewCreditEventEventLogFilter(EventLogPushWithDecodeCallback callback) {
        String topic0 = EventEncoder.encode(NEWCREDITEVENT_EVENT);
        registerEventLogPushFilter(ABI,BINARY,topic0,callback);
    }

    @Deprecated
    public static CreditSignersData load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CreditSignersData(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CreditSignersData load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CreditSignersData(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CreditSignersData load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CreditSignersData(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CreditSignersData load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CreditSignersData(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CreditSignersData> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, List<String> creditSigners) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(creditSigners.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(creditSigners, Address.class))));
        return deployRemoteCall(CreditSignersData.class, web3j, credentials, contractGasProvider, getBinary(), encodedConstructor);
    }

    public static RemoteCall<CreditSignersData> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, List<String> creditSigners) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(creditSigners.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(creditSigners, Address.class))));
        return deployRemoteCall(CreditSignersData.class, web3j, transactionManager, contractGasProvider, getBinary(), encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CreditSignersData> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, List<String> creditSigners) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(creditSigners.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(creditSigners, Address.class))));
        return deployRemoteCall(CreditSignersData.class, web3j, credentials, gasPrice, gasLimit, getBinary(), encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CreditSignersData> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, List<String> creditSigners) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(creditSigners.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(creditSigners, Address.class))));
        return deployRemoteCall(CreditSignersData.class, web3j, transactionManager, gasPrice, gasLimit, getBinary(), encodedConstructor);
    }

    public static class NewCreditEventEventResponse {
        public Log log;

        public String addr;
    }
}
